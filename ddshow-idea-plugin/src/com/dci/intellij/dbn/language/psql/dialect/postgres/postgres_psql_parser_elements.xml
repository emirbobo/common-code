<?xml version="1.0" encoding="UTF-8"?>
<!--<!DOCTYPE element-defs SYSTEM "/../../../common/definition/language-parser-elements.dtd">-->
<element-defs language="POSTGRES-PSQL" version="5.6">
    <element-def attributes="ROOT, STRUCTURE" description="PSQL block" icon="FILE_BLOCK_PSQL" id="psql_block">
    </element-def>



    <!-- ========= EXPRESSION ========= -->
    <element-def description="Expression" id="expression">
        <iteration id="000000486" separator="OPR_CONCATENATION, CHR_STAR, CHR_SLASH, CHR_PLUS, CHR_MINUS, CHR_AND">
            <sequence id="000000487">
                <sequence id="000000488" wrapping-template="PARENTHESES">
                    <one-of id="000000489" optional="true">
                        <token id="000000490" type-id="CHR_PLUS" />
                        <token id="000000491" type-id="CHR_MINUS" />
                        <token id="000000492" type-id="CHR_AND" />
                        <token id="000000493" type-id="KW_PRIOR" />
                        <token id="000000494" type-id="KW_NOT" />
                    </one-of>
                    <one-of id="000000495">
                        <element ref-id="expression" />
                        <element ref-id="expr" />
                    </one-of>
                </sequence>

                <iteration id="000000496" optional="true">
                    <one-of id="000000497">
                        <sequence id="000000498">
                            <token id="000000499" type-id="CHR_LEFT_BRACKET" />
                            <element optional="true" ref-id="expression_list" />
                            <token id="000000500" type-id="CHR_RIGHT_BRACKET" />
                        </sequence>
                        <sequence id="000000501">
                            <token id="000000502" type-id="CHR_DOT" />
                            <object-ref id="000000503" type="ANY" />
                        </sequence>
                        <iteration id="000000504" optional="true">
                            <element optional="true" ref-id="postfix_cast_expression" />
                        </iteration>
                    </one-of>
                </iteration>
            </sequence>
        </iteration>
    </element-def>
    <element-def description="Expr" id="expr" wrapping-template="PARENTHESES">
        <one-of id="000000505">
            <wrapper id="000000506" template="PARENTHESES">
                <element ref-id="subquery" />
            </wrapper>
            <element ref-id="array_expression" />
            <element ref-id="case_expression" />
            <element ref-id="cast_expression" />
            <element ref-id="sequence_expression" />
            <element ref-id="simple_expression" />
            <exec-variable id="000000507" />
        </one-of>
        <iteration id="000000508" optional="true">
            <element optional="true" ref-id="postfix_cast_expression" />
        </iteration>
    </element-def>
    <element-def description="Postfix cast expression" id="postfix_cast_expression">
        <token id="000000509" type-id="OPR_CAST_PREFIX" />
        <one-of id="000000510">
            <element ref-id="data_type" />
            <qualified-identifier id="000000511" separator="CHR_DOT">
                <variant>
                    <object-ref id="000000512" optional="true" type="SCHEMA" />
                    <object-ref id="000000513" local="true" type="TYPE" />
                </variant>
            </qualified-identifier>
        </one-of>
    </element-def>
    <element-def description="Array expression" id="array_expression">
        <one-of id="000000514">
            <token flavor="function" id="000000515" type-id="KW_ANY" />
            <token flavor="function" id="000000516" type-id="KW_SOME" />
            <token flavor="function" id="000000517" type-id="KW_ALL" />
        </one-of>
        <wrapper id="000000518" template="PARENTHESES">
            <one-of id="000000519">
                <sequence id="000000520">
                    <token flavor="keyword" id="000000521" type-id="DT_ARRAY" />
                    <wrapper begin-token="CHR_LEFT_BRACKET" end-token="CHR_RIGHT_BRACKET" id="000000522">
                        <iteration id="000000523" separator="CHR_COMMA">
                            <element ref-id="expression" />
                        </iteration>
                    </wrapper>
                </sequence>
                <element ref-id="simple_expression" />
            </one-of>
        </wrapper>
    </element-def>
    <element-def description="Simple expression" id="simple_expression">
        <one-of id="000000524" sortable="true">
            <sequence id="000000525">
                <qualified-identifier id="000000526" separator="CHR_DOT">
                    <variant>
                        <alias-ref id="000000527" optional="true" type="DATASET" />
                        <token id="000000528" type-id="DT_OID" />
                    </variant>
                    <variant>
                        <alias-ref id="000000529" optional="true" type="DATASET" />
                        <object-ref id="000000530" type="COLUMN" />
                    </variant>
                    <variant>
                        <object-ref id="000000531" local="true" optional="true" type="SCHEMA" />
                        <object-ref id="000000532" local="true" optional="true" type="DATASET" />
                        <object-ref id="000000533" type="COLUMN" />
                    </variant>
                    <variant>
                        <object-ref id="000000534" local="true" optional="true" type="SCHEMA" />
                        <object-ref id="000000535" local="true" optional="true" type="DATASET" />
                        <token id="000000536" type-id="CHR_STAR" />
                    </variant>
                    <variant>
                        <object-ref id="000000537" local="true" optional="true" type="SCHEMA" />
                        <object-ref id="000000538" local="true" optional="true" type="DATASET" />
                        <token id="000000539" type-id="DT_OID" />
                    </variant>
                    <variant>
                        <alias-ref id="000000540" optional="true" type="DATASET" />
                        <alias-ref id="000000541" type="COLUMN" />
                    </variant>
                    <variant>
                        <alias-ref id="000000542" type="DATASET" />
                        <token id="000000543" type-id="CHR_STAR" />
                    </variant>
                    <variant>
                        <alias-ref id="000000544" type="DATASET" />
                        <token id="000000545" type-id="DT_OID" />
                    </variant>
                    <variant>
                        <object-ref id="000000546" optional="true" type="SCHEMA" />
                        <object-ref id="000000547" type="FUNCTION" />
                    </variant>
                </qualified-identifier>
                <wrapper attributes="METHOD_PARAMETER_HANDLER" id="000000548" optional="true" template="PARENTHESES">
                    <iteration id="000000549" optional="true" separator="CHR_COMMA">
                        <element ref-id="expression" />
                    </iteration>
                </wrapper>
            </sequence>
            <element ref-id="number" />
            <token id="000000550" original-name="text" type-id="STRING" />
            <token id="000000551" type-id="KW_NULL" />
            <token id="000000552" type-id="KW_TRUE" />
            <token id="000000553" type-id="KW_FALSE" />
        </one-of>
        <iteration id="000000554" optional="true">
            <sequence id="000000555">
                <token id="000000556" type-id="CHR_LEFT_BRACKET" />
                <element optional="true" ref-id="expression_list" />
                <token id="000000557" type-id="CHR_RIGHT_BRACKET" />
            </sequence>
        </iteration>
        <token id="000000558" optional="true" type-id="CT_OUTER_JOIN" />
    </element-def>
    <element-def description="CASE expression" id="case_expression">
        <token id="000000559" type-id="KW_CASE" />
        <element optional="true" ref-id="expression" />
        <iteration id="000000560">
            <sequence id="000000561">
                <token id="000000562" type-id="KW_WHEN" />
                <element ref-id="condition" />
                <token id="000000563" type-id="KW_THEN" />
                <element ref-id="condition" />
            </sequence>
        </iteration>
        <sequence id="000000564" optional="true">
            <token id="000000565" type-id="KW_ELSE" />
            <element ref-id="condition" />
        </sequence>
        <token id="000000566" type-id="KW_END" />
    </element-def>
    <element-def description="Cast expression" id="cast_expression">
        <one-of id="000000567">
            <sequence id="000000568">
                <token id="000000569" type-id="KW_CAST" />
                <wrapper id="000000570" template="PARENTHESES">
                    <sequence id="000000571">
                        <element ref-id="expression" />
                        <token id="000000572" type-id="KW_AS" />
                        <element ref-id="data_type" />
                    </sequence>
                </wrapper>
            </sequence>
            <sequence id="000000573">
                <element ref-id="data_type" />
                <wrapper id="000000574" template="PARENTHESES">
                    <element ref-id="expression" />
                </wrapper>
            </sequence>
        </one-of>
    </element-def>
    <element-def description="Sequence expression" id="sequence_expression">
        <one-of id="000000575">
            <sequence id="000000576">
                <token id="000000577" type-id="FN_CURRVAL" />
                <wrapper id="000000578" template="PARENTHESES">
                    <token id="000000579" type-id="STRING" />
                </wrapper>
            </sequence>
            <sequence id="000000580">
                <token id="000000581" type-id="FN_NEXTVAL" />
                <wrapper id="000000582" template="PARENTHESES">
                    <token id="000000583" type-id="STRING" />
                </wrapper>
            </sequence>
            <sequence id="000000584">
                <token id="000000585" type-id="FN_LASTVAL" />
                <token id="000000586" type-id="CHR_LEFT_PARENTHESIS" />
                <token id="000000587" type-id="CHR_RIGHT_PARENTHESIS" />
            </sequence>
            <sequence id="000000588">
                <token id="000000589" type-id="FN_SETVAL" />
                <wrapper id="000000590" template="PARENTHESES">
                    <sequence id="000000591">
                        <token id="000000592" type-id="STRING" />
                        <token id="000000593" type-id="INTEGER" />
                        <one-of id="000000594" optional="true">
                            <token id="000000595" type-id="KW_TRUE" />
                            <token id="000000596" type-id="KW_FALSE" />
                        </one-of>
                    </sequence>
                </wrapper>
            </sequence>
        </one-of>
    </element-def>

    <element-def description="Function expression" id="function_expression">
        <one-of id="000000597">
            <sequence id="000000598">
                <qualified-identifier id="000000599" separator="CHR_DOT">
                    <variant>
                        <object-ref id="000000600" optional="true" type="SCHEMA" />
                        <object-ref id="000000601" type="FUNCTION" />
                    </variant>
                </qualified-identifier>
                <wrapper attributes="METHOD_PARAMETER_HANDLER" exit="true" id="000000602" template="PARENTHESES">
                    <iteration id="000000603" optional="true" separator="CHR_COMMA">
                        <element ref-id="expression" />
                    </iteration>
                </wrapper>
            </sequence>
        </one-of>
    </element-def>

    <element-def description="Expression list" id="expression_list">
        <iteration id="000000604" separator="CHR_COMMA" wrapping-template="PARENTHESES">
            <element ref-id="expression" />
        </iteration>
    </element-def>


    <!-- ========= CONDITIONS ========= -->
    <element-def description="Condition" id="condition" wrapping-template="PARENTHESES">
        <one-of id="000000605">
            <iteration formatting-indent="NORMAL" id="000000606" separator="KW_AND, KW_OR">
                <element ref-id="condition" />
            </iteration>
            <sequence id="000000607" wrapping-template="PARENTHESES">
                <element ref-id="expression_list" />
                <one-of id="000000608" optional="true">
                    <sequence id="000000609">
                        <token id="000000610" optional="true" type-id="KW_NOT" />
                        <one-of id="000000611">
                            <sequence id="000000612">
                                <token exit="true" id="000000613" type-id="KW_IN" />
                                <wrapper id="000000614" template="PARENTHESES">
                                    <one-of id="000000615">
                                        <element ref-id="subquery" />
                                        <element ref-id="expression_list" />
                                    </one-of>
                                </wrapper>
                            </sequence>
                            <sequence id="000000616">
                                <token id="000000617" type-id="KW_LIKE" />
                                <element ref-id="expression" />
                            </sequence>
                            <sequence id="000000618">
                                <token id="000000619" type-id="KW_EXISTS" />
                                <wrapper id="000000620" template="PARENTHESES">
                                    <element ref-id="subquery" />
                                </wrapper>
                            </sequence>
                            <sequence id="000000621">
                                <sequence id="000000622">
                                    <token id="000000623" type-id="KW_BETWEEN" />
                                    <element ref-id="expression" />
                                    <token id="000000624" type-id="KW_AND" />
                                    <element ref-id="expression" />
                                </sequence>
                            </sequence>
                        </one-of>
                    </sequence>
                    <sequence id="000000625">
                        <one-of id="000000626">
                            <element ref-id="equality_operator" />
                            <element ref-id="greater_less_operator" />
                        </one-of>
                        <one-of id="000000627">
                            <wrapper id="000000628" template="PARENTHESES">
                                <element ref-id="subquery" />
                            </wrapper>
                            <element ref-id="expression_list" />
                        </one-of>
                    </sequence>
                    <sequence id="000000629">
                        <token id="000000630" type-id="KW_IS" />
                        <token id="000000631" optional="true" type-id="KW_NOT" />
                        <token id="000000632" type-id="KW_NULL" />
                    </sequence>
                </one-of>
            </sequence>
        </one-of>
    </element-def>


    <!-- ========= DATA_TYPES ========= -->
    <element-def description="Data type" id="data_type">
        <one-of id="000000633">
            <token id="000000634" type-id="DT_ARRAY" />
            <token id="000000635" type-id="DT_BIGINT" />
            <token id="000000636" type-id="DT_BIGSERIAL" />
            <token flavor="datatype" id="000000637" type-id="FN_BIT" />
            <token id="000000638" type-id="DT_BOOL" />
            <token id="000000639" type-id="DT_BOOLEAN" />
            <token id="000000640" type-id="DT_BOX" />
            <token id="000000641" type-id="DT_BYTEA" />
            <token id="000000642" type-id="DT_CHAR" />
            <token id="000000643" type-id="DT_CHARACTER" />
            <token id="000000644" type-id="DT_CHARACTER" />
            <token id="000000645" type-id="DT_CID" />
            <token id="000000646" type-id="DT_CIDR" />
            <token id="000000647" type-id="DT_CIRCLE" />
            <token id="000000648" type-id="DT_DATE" />
            <token id="000000649" type-id="DT_DECIMAL" />
            <token id="000000650" type-id="DT_DOUBLE_PRECISION" />
            <token id="000000651" type-id="DT_INET" />
            <token id="000000652" type-id="DT_INT" />
            <token id="000000653" type-id="DT_INT2" />
            <token id="000000654" type-id="DT_INT2VECTOR" />
            <token id="000000655" type-id="DT_INT4" />
            <token id="000000656" type-id="DT_INT8" />
            <token id="000000657" type-id="DT_INTEGER" />
            <token id="000000658" type-id="DT_INTERVAL" />
            <token id="000000659" type-id="DT_JSON" />
            <token id="000000660" type-id="DT_LINE" />
            <token id="000000661" type-id="DT_LSEG" />
            <token id="000000662" type-id="DT_MACADDR" />
            <token id="000000663" type-id="DT_MONEY" />
            <token id="000000664" type-id="DT_NAME" />
            <token id="000000665" type-id="DT_NUMERIC" />
            <token id="000000666" type-id="DT_OID" />
            <token id="000000667" type-id="DT_PATH" />
            <token id="000000668" type-id="DT_POINT" />
            <token id="000000669" type-id="DT_POLYGON" />
            <token id="000000670" type-id="DT_REAL" />
            <token id="000000671" type-id="DT_SERIAL" />
            <token id="000000672" type-id="DT_SERIAL8" />
            <token id="000000673" type-id="DT_SMALLINT" />
            <token id="000000674" type-id="DT_SMALLSERIAL" />
            <token id="000000675" type-id="DT_TEXT" />
            <token id="000000676" type-id="DT_TID" />
            <token id="000000677" type-id="DT_TIME" />
            <token id="000000678" type-id="DT_TIMESTAMP" />
            <token id="000000679" type-id="DT_TSQUERY" />
            <token id="000000680" type-id="DT_TSVECTOR" />
            <token id="000000681" type-id="DT_UUID" />
            <token id="000000682" type-id="DT_VARBIT" />
            <token id="000000683" type-id="DT_VARCHAR" />
            <token id="000000684" type-id="DT_XID" />
            <token id="000000685" type-id="DT_XML" />
        </one-of>
    </element-def>

    <!-- ========= OPERATORS ========= -->
    <element-def description="EQUALITY operator" id="equality_operator">
        <one-of id="000000686">
            <sequence id="000000687">
                <token id="000000688" optional="true" type-id="CHR_EXCLAMATION" />
                <token exit="true" id="000000689" type-id="CHR_EQUAL" />
            </sequence>
            <sequence id="000000690">
                <token id="000000691" type-id="CHR_LESS" />
                <token exit="true" id="000000692" type-id="CHR_GREATER" />
            </sequence>
        </one-of>
    </element-def>
    <element-def description="GREATER/LESS operator" id="greater_less_operator">
        <one-of id="000000693">
            <sequence id="000000694">
                <token id="000000695" type-id="CHR_GREATER" />
                <token id="000000696" optional="true" type-id="CHR_EQUAL" />
            </sequence>
            <sequence id="000000697">
                <token id="000000698" type-id="CHR_LESS" />
                <token id="000000699" optional="true" type-id="CHR_EQUAL" />
            </sequence>
        </one-of>
    </element-def>
    <element-def description="CONCATENATION operator" id="concatenation_operator">
        <token id="000000700" type-id="CHR_VERTICAL_BAR" />
        <token id="000000701" type-id="CHR_VERTICAL_BAR" />
    </element-def>

    <!-- ========= MISCELLANEOUS ========= -->
    <element-def description="Integer" id="integer">
        <one-of id="000000702" optional="true">
            <token id="000000703" type-id="CHR_MINUS" />
            <token id="000000704" type-id="CHR_PLUS" />
        </one-of>
        <token id="000000705" type-id="INTEGER" />
    </element-def>

    <element-def description="Number" id="number">
        <one-of id="000000706" optional="true">
            <token id="000000707" type-id="CHR_MINUS" />
            <token id="000000708" type-id="CHR_PLUS" />
        </one-of>
        <one-of id="000000709">
            <token id="000000710" type-id="NUMBER" />
            <token id="000000711" type-id="INTEGER" />
        </one-of>
    </element-def>

    <element-def description="Boolean" id="boolean">
        <one-of id="000000712">
            <token id="000000713" type-id="KW_TRUE" />
            <token id="000000714" type-id="KW_FALSE" />
            <token id="000000715" type-id="KW_ON" />
            <token id="000000716" type-id="KW_OFF" />
            <token id="000000717" type-id="INTEGER" />
        </one-of>
    </element-def>

    <!-- CUSTOM -->
    <element-def description="IF EXISTS clause" id="if_exists_clause">
        <token id="000000718" type-id="KW_IF" />
        <token id="000000719" type-id="KW_EXISTS" />
    </element-def>
    <element-def description="IF NOT EXISTS clause" id="if_not_exists_clause">
        <token id="000000720" type-id="KW_IF" />
        <token id="000000721" type-id="KW_NOT" />
        <token id="000000722" type-id="KW_EXISTS" />
    </element-def>

    <element-def description="Unknown identifier" id="custom_undefined">
        <token id="000000723" type-id="IDENTIFIER" />
    </element-def>

    <element-def description="Statement end" formatting-spacing-before="NO_SPACE" id="end" truncate-on-execution="true">
        <token id="000000724" type-id="CHR_SEMICOLON" />
    </element-def>
</element-defs>
